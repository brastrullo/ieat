{"version":3,"sources":["features/city/citySlice.js","features/assets/loadingBtn.module.css","features/assets/LoadingBtn.js","features/city/City.js","App.js","app/store.js","serviceWorker.js","index.js","features/city/City.module.css"],"names":["citySlice","createSlice","name","initialState","loading","simpleList","fullList","filteredList","list","citiesList","nEntries","currentPage","totalPages","totalEntries","value","filter","reducers","state","action","listReceived","console","log","payload","length","n","p","min","max","newList","slice","setCitiesList","clearLists","setTotalPages","setNEntries","setCityVal","setFilterVal","setSimpleList","setFullList","setFilteredList","setCurrentPage","setTotalEntries","actions","fetchList","filterLists","updatePage","dispatch","fetchCitiesAsync","a","cities","fetch","getData","json","res","data","alert","fetchFullList","obj","pageArr","Array","keys","map","arr","i","getList","city","restaurants","r","concat","listLoaded","filterAsync","fetchAsync","page","total","total_entries","perPage","per_page","Math","ceil","current_page","address","area","unique","from","Set","JSON","stringify","parse","filtered","s","replace","toLowerCase","some","indexOf","selectLoading","selectValue","selectFilter","selectList","selectFullList","selectFilteredList","selectTotalEntries","selectTotalPages","selectCurrentPage","selectNEntries","selectCitiesList","module","exports","LoadingBtn","className","styles","lds_ellipsis","RestaurantsList","React","lazy","City","useDispatch","useSelector","loadingState","useState","searchObject","setSearchObject","cityValue","setCityValue","useEffect","handleInputChange","e","preventDefault","target","id","CitiesDataList","key","Pagination","pages","pagesList","i1page","pageClass","current_page_btn","page_btn","onClick","pages_list","searching_text","searching_city","search_fields","city_label","htmlFor","city_input","type","placeholder","required","onChange","filter_label","filter_input","search_btn","disabled","fallback","App","configureStore","reducer","cityReducer","middleware","getDefaultMiddleware","serializableCheck","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5fbddea5.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nexport const citySlice = createSlice({\n  name: 'city',\n  initialState: {\n    loading: 'idle',\n    simpleList: [],\n    fullList: [],\n    filteredList: [],\n    list: [],\n    citiesList: [],\n    nEntries: 25,\n    currentPage: 1,\n    totalPages: 0,\n    totalEntries:0,\n    value: '',\n    filter: ''\n  },\n  reducers: {\n    loading: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n      }\n    },\n    listReceived: (state, action) => {\n      console.log('oldlist', action.payload);\n      const list = action.payload;\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n        if (state.filter.length > 0) {\n          const n = state.nEntries;\n          const p = state.currentPage;\n          const min = (p * n) - (n);\n          const max = ((p - 1) * n) + n + 1;\n          const newList = list.slice(min, max)\n          console.log({newList})\n          state.list = newList\n        } else {\n          state.list = list\n        }\n\n      }\n    },\n    setCitiesList: (state, action) => {\n      state.citiesList = action.payload;\n    },\n    clearLists: (state, action) => {\n      state.list = [];\n      state.simpleList = [];\n      state.fullList = [];\n    },\n    setTotalPages: (state, action) => {\n      state.totalPages = action.payload;\n    },\n    setNEntries: (state, action) => {\n      state.nEntries = action.payload;\n    },\n    setCityVal: (state, action) => {\n      state.value = action.payload;\n    },\n    setFilterVal: (state, action) => {\n      state.filter = action.payload;\n    },\n    setSimpleList: (state, action) => {\n      state.simpleList += action.payload;\n    },\n    setFullList: (state, action) => {\n      state.fullList += action.payload;\n    },\n    setFilteredList: (state, action) => {\n      state.filteredList = action.payload;\n    },\n    setCurrentPage: (state, action) => {\n      console.log(action.payload)\n      state.currentPage = action.payload;\n    },\n    setTotalEntries: (state, action) => {\n      state.totalEntries = action.payload;\n    }\n  },\n});\n\nexport const {\n  loading,\n  setCityVal,\n  setFilterVal,\n  fetchList,\n  listReceived,\n  setCitiesList,\n  setSimpleList,\n  setFullList,\n  setFilteredList,\n  filterLists,\n  setCurrentPage,\n  setTotalEntries,\n  setTotalPages,\n  setNEntries,\n  clearLists\n } = citySlice.actions;\n\nexport const updatePage = (list) => dispatch => {\n  dispatch(loading());\n  dispatch(listReceived(list));\n}\n\nexport const fetchCitiesAsync = () => async dispatch => {\n  const url = `https://opentable.herokuapp.com/api/cities`;\n  const cities = async () => {\n    try {\n      const getData = await fetch(`${url}`);\n      const res = await getData.json();\n      const data = await res.cities;\n      return await data;\n    } catch(err) {\n      alert(err)\n    }\n  }\n  const res = await cities();\n  dispatch(setCitiesList(res));\n}\n\nexport const fetchFullList = (obj) => async dispatch => {\n  dispatch(setTotalPages(obj.totalPages));\n  const pageArr = [...Array(obj.totalPages).keys()].map(n => n + 1);\n  const fullList = async () => {\n    let arr = [];\n    for (const i of pageArr) {\n      const url = `https://opentable.herokuapp.com/api/restaurants`;\n      const getList = async () => {\n        try {\n          const getData = await fetch(`${url}?city=${obj.city};page=${i}`)\n          const res = await getData.json();\n          const data = await res.restaurants;\n          return await data;\n        } catch(err) {\n          alert(err)\n        }\n      }\n      const r = await getList();\n      arr = arr.concat(r)\n    }\n    return await arr\n  }\n  const listLoaded = await fullList();\n  dispatch(setFullList(listLoaded));\n  if (obj.filter.length > 0) {\n    dispatch(filterAsync(listLoaded, obj));\n  }\n}\n\nexport const fetchAsync = obj => async dispatch => {\n  dispatch(loading());\n  dispatch(setCityVal(obj.city));\n  dispatch(setFilterVal(obj.filter));\n  const url = `https://opentable.herokuapp.com/api/restaurants`;\n  const data = async () => {\n    try {\n      const getData = await fetch(`${url}?city=${obj.city};page=${obj.page}`);\n      const res = await getData.json();\n      const total = res.total_entries;\n      const perPage = res.per_page;\n      const totalPages = Math.ceil(total / perPage)\n      dispatch(setTotalPages(totalPages))\n      dispatch(setCurrentPage(res.current_page))\n      dispatch(setTotalEntries(total))\n      if (obj.page === 1) {\n        dispatch(fetchFullList({...obj, totalPages, perPage}))\n      }\n      const data = await res;\n      return await data;\n    } catch(err) {\n      alert(err)\n    }\n  }\n  const res = await data();\n  const restaurants = res.restaurants;\n  const simpleList = restaurants.map(\n    ({name, address, area}) => ({ name, address, area })\n  );\n  console.log({res, restaurants})\n  dispatch(setSimpleList(simpleList));\n  // const totalPages = Math.ceil(res.total_entries / res.per_page);\n  const totalEntries = res.total_entries;\n  if (obj.filter.length === 0) {\n    dispatch(clearLists())\n    // dispatch(fetchFullList({...obj, totalPages, perPage: res.per_page}))\n    dispatch(filterAsync(restaurants, {...obj, perPage: res.per_page, totalEntries }));\n  }\n};\n\nexport const filterAsync = (list, obj) => async dispatch => {\n  console.log({obj})\n  const unique = Array.from(new Set(list.map(JSON.stringify))).map(JSON.parse);\n  const filtered = unique.filter(({\n    name,\n    address,\n    area\n  }) => {\n    const arr = [name, address, area];\n    const s = obj.filter.replace(/\\s/g, ' ').toLowerCase();\n    return arr.some(n => n.replace(/\\s/g, ' ').toLowerCase().indexOf(s) !== -1)\n  })\n  const n = obj.perPage\n  const totalEntries =\n    obj.filter.length > 0\n    ? filtered.length\n    :  obj.totalEntries;\n    console.log({totalEntries})\n  const totalPages = Math.ceil(totalEntries / n);\n  dispatch(setTotalPages(totalPages));\n  dispatch(setTotalEntries(totalEntries));\n  dispatch(setFilteredList(filtered));\n  dispatch(listReceived(filtered));\n}\n\nexport const selectLoading = state => state.city.loading;\nexport const selectValue = state => state.city.value;\nexport const selectFilter = state => state.city.filter;\nexport const selectList = state => state.city.list;\nexport const selectFullList = state => state.city.fullList;\nexport const selectFilteredList = state => state.city.filteredList;\nexport const selectTotalEntries = state => state.city.totalEntries;\nexport const selectTotalPages = state => state.city.totalPages;\nexport const selectCurrentPage = state => state.city.currentPage;\nexport const selectNEntries = state => state.city.nEntries;\nexport const selectCitiesList = state => state.city.citiesList;\n\n\nexport default citySlice.reducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_ellipsis\":\"loadingBtn_lds_ellipsis__3FiI1\",\"lds-ellipsis1\":\"loadingBtn_lds-ellipsis1__10mR-\",\"lds-ellipsis2\":\"loadingBtn_lds-ellipsis2__3VfzW\",\"lds-ellipsis3\":\"loadingBtn_lds-ellipsis3__Z-ZOI\"};","import React from 'react';\nimport styles from './loadingBtn.module.css';\n\nconst LoadingBtn = () => {\n  return (\n    <div className={styles.lds_ellipsis}><div></div><div></div><div></div><div></div></div>\n  )\n}\nexport default LoadingBtn;","import React, { useState, useEffect, Suspense } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchAsync,\n  filterAsync,\n  selectValue,\n  selectList,\n  selectFullList,\n  selectLoading,\n  selectFilter,\n  selectTotalEntries,\n  selectTotalPages,\n  selectCurrentPage,\n  selectNEntries,\n  selectCitiesList,\n  fetchCitiesAsync,\n  selectFilteredList,\n  fetchFullList,\n  setCurrentPage,\n  updatePage\n} from './citySlice';\nimport LoadingBtn from '../assets/LoadingBtn';\nimport styles from './City.module.css';\n\nconst RestaurantsList = React.lazy(() => import('../restaurants/RestaurantsList'));\n\nexport function City() {\n  const dispatch = useDispatch();\n  const filteredList = useSelector(selectFilteredList);\n  const citiesList = useSelector(selectCitiesList);\n  const nEntries = useSelector(selectNEntries);\n  const currentPage = useSelector(selectCurrentPage);\n  const loadingState = useSelector(selectLoading);\n  const totalEntries = useSelector(selectTotalEntries);\n  const totalPages = useSelector(selectTotalPages);\n  const list = useSelector(selectList);\n  const fullList = useSelector(selectFullList);\n  const value = useSelector(selectValue);\n  const filter = useSelector(selectFilter);\n  const [searchObject, setSearchObject] = useState({\n    city: value,\n    filter,\n    page: currentPage\n  });\n  const [cityValue, setCityValue] = useState(value);\n\n  useEffect(() => {\n    dispatch(fetchCitiesAsync())\n  },[]) // should only run once on mount\n\n  const handleInputChange = e => {\n    e.preventDefault()\n    setSearchObject({ ...searchObject, [e.target.id]: e.target.value } )\n    e.target.id === 'city' &&\n      setCityValue(e.target.value)\n  }\n  const searchCity = () => {\n    // if (fullList.length > 0 && filter.length > 0) {\n    //   dispatch(filterAsync(fullList, searchObject.filter))\n    // } else {\n    //   console.log('new search')\n      dispatch(fetchAsync(searchObject))\n    // }\n  }\n  const goToPage = (n) => {\n    console.log({n})\n    dispatch(setCurrentPage(n))\n    if (filter.length > 0) {\n      dispatch(updatePage(filteredList))\n    } else {\n      dispatch(fetchAsync({...searchObject, page: n}))\n    }\n  }\n\n  const CitiesDataList = ({ id }) => {\n    const list = citiesList.map((city, i) =>\n      <option key={`c${i}`} value={city} />\n    );\n    return <datalist id={id}>{list}</datalist>\n  }\n\n  const Pagination = () => {\n    const pages = totalPages;\n    const pagesList = [...Array(pages).keys()]\n    .filter(page => {\n      const i1page = page + 1;\n      const currentPageGreaterThanorLessThan2 =\n        i1page <= currentPage + 1 &&\n        i1page >= currentPage - 1;\n      const currentPageLessThan5ShowUpTo6 =\n        currentPage <= 2 &&\n        i1page <= 4;\n      const lessThanMaxShowUpTo6 =\n        currentPage >= pages - 1 &&\n        i1page >= pages - 3;\n      return (\n        page === 0 ||\n        (currentPageGreaterThanorLessThan2 ||\n          currentPageLessThan5ShowUpTo6 ||\n          lessThanMaxShowUpTo6) ||\n        page === pages - 1\n      )\n    })\n    .map(page => {\n      const pageClass = currentPage === page + 1 ? styles.current_page_btn : styles.page_btn;\n      return (\n        <button\n          key={`p${page}`}\n          className={pageClass}\n          onClick={() => goToPage(page + 1)}\n        >\n          {((\n              (page === pages - 1) &&\n              (currentPage < pages - 1)\n            ) ? '...' : '') +\n          `${page + 1}` +\n          ((page + 1 === 1) &&\n          (currentPage > 3)\n          ? '...' : '')}\n        </button>\n      )\n    })\n    return <ul className={styles.pages_list}>{ pagesList }</ul>\n  }\n\n  return (\n    <>\n      <p className={styles.searching_text}>\n        <p>Search for restaurants in </p>\n        <span className={styles.searching_city}>\n          {\n            searchObject.city.length > 0\n            ? `${searchObject.city}.`\n            : `...`\n          }\n        </span>\n\n      </p>\n      <div className={styles.search_fields}>\n        <label className={styles.city_label} htmlFor=\"city\">City</label>\n        <input\n          list=\"citiesList\"\n          className={styles.city_input}\n          type=\"text\"\n          id=\"city\"\n          name=\"city\"\n          placeholder=\"ex. 'Toronto'\"\n          required\n          onChange={handleInputChange}\n        />\n        <CitiesDataList id=\"citiesList\" />\n        <label className={styles.filter_label} htmlFor=\"filter\">Filter</label>\n        <input\n          className={styles.filter_input}\n          type=\"text\"\n          id=\"filter\"\n          name=\"filter\"\n          placeholder=\"ex. 'King St' or 'bar'\"\n          required\n          onChange={handleInputChange}\n        />\n        <button\n          className={styles.search_btn}\n          onClick={searchCity}\n          disabled={cityValue.length === 0 || loadingState !== 'idle'}\n        >\n        { loadingState === 'idle'\n          ? `find`\n          : <LoadingBtn />\n        }\n        </button>\n      </div>\n      { (list.length >= 0 && value && loadingState !== 'pending') &&\n        <p>\n          {`Showing ${(currentPage * nEntries) - (nEntries - 1)}` +\n          `-${((currentPage - 1) * nEntries) + list.length} ` +\n          `of ${totalEntries}`}\n        </p>\n      }\n      { filter.length > 0 &&\n        <p>{`Finding: '${filter}' / Found ${list.length}`} </p>\n      }\n      { list &&\n        <>\n          <Pagination\n            totalPages={totalPages}\n            currentPage={currentPage}\n            totalEntries={totalEntries}\n          />\n          <Suspense fallback={<div>Loading...</div>}>\n            <RestaurantsList />\n          </Suspense>\n          <Pagination\n            totalPages={totalPages}\n            currentPage={currentPage}\n            totalEntries={totalEntries}\n          />\n        </>\n      }\n    </>\n  );\n}\n","import React from 'react';\r\nimport { City } from './features/city/City';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <City />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport cityReducer from '../features/city/citySlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    city: cityReducer,\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: false\r\n  })\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searching_text\":\"City_searching_text__1GPRk\",\"searching_city\":\"City_searching_city__16gbI\",\"search_fields\":\"City_search_fields__1C3VR\",\"city_label\":\"City_city_label__38Y80\",\"filter_label\":\"City_filter_label__uRfOL\",\"city_input\":\"City_city_input__2Gq1l\",\"filter_input\":\"City_filter_input__Z4b1x\",\"search_btn\":\"City_search_btn__2lonH\",\"pages_list\":\"City_pages_list__2ZUgP\",\"page_btn\":\"City_page_btn__YbmDK\",\"current_page_btn\":\"City_current_page_btn__1kwmU\",\"restaurant_list\":\"City_restaurant_list__3Oy84\",\"anchor\":\"City_anchor__3kxJh\",\"item_card\":\"City_item_card__1TIhY\",\"image_bg\":\"City_image_bg__2ghLL\",\"image\":\"City_image__2Lio_\",\"text_bg\":\"City_text_bg__1i18B\",\"address\":\"City_address__THvf_\",\"name_bg\":\"City_name_bg__2G-SB\",\"name\":\"City_name__oQ0sk\",\"price_list\":\"City_price_list__37A7m\",\"price_symbol\":\"City_price_symbol__21fIH\",\"area\":\"City_area__lisU7\",\"reserve_btn\":\"City_reserve_btn__3XvU5\"};"],"sourceRoot":""}